#!/bin/bash
#
# This file is part of the Open AS Communication Gateway.
#
# The Open AS Communication Gateway is free software: you can redistribute it
# and/or modify it under theterms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the License,
# or (at your option) any later version.
#
# The Open AS Communication Gateway is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License along
# with the Open AS Communication Gateway. If not, see http://www.gnu.org/licenses/.
#
### BEGIN INIT INFO
# Provides:          openas-quarantine-cron
# Required-Start:    $local_fs $network $remote_fs $syslog
# Required-Stop:     $local_fs $network $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Init script for Open AS Quarantine Cron.
# Description:       Init script for Open AS Quarantine Cron.
### END INIT INFO

PATH=/sbin:/bin:/usr/sbin:/usr/bin
PIDFILE=/var/run/openas-quarantine-cron.pid
DAEMON=/usr/bin/quarantine-cron.pl
NAME=openas-quarantine-cron
DESC="Open AS Quarantine Cron"

do_start()
{
    echo -n "Starting $DESC: "
    if start-stop-daemon --start --quiet --pidfile ${PIDFILE} --name ${NAME} --startas ${DAEMON} -- start >/dev/null ; then
            echo "${NAME}."
    else
            if start-stop-daemon --test --start --quiet --pidfile ${PIDFILE} --name ${NAME} --startas ${DAEMON} >/dev/null 2>&1; then
                    echo "(failed)."
                    exit 1
            else
                    echo "(already running)."
                    exit 0
            fi
    fi
    echo "$NAME."
}

do_stop()
{
    echo -n "Stopping $DESC: "
    if start-stop-daemon --stop --quiet --pidfile ${PIDFILE} --name ${NAME} --retry 10 >/dev/null ; then
            echo "${NAME}."
    else
            if start-stop-daemon --test --start --quiet --pidfile ${PIDFILE} --name ${NAME} --startas ${DAEMON} >/dev/null 2>&1; then
                    echo "(not running)."
                    exit 0
            else
                    echo "(failed)."
                    exit 1
            fi
    fi
    echo "$NAME."
}

case "$1" in
  start)
    do_start
    exit 0
    ;;

  stop)
    do_stop
    exit 0
    ;;

  restart)
    do_stop
    do_start
    exit 0
    ;;

  status)
    status_of_proc -p $PIDFILE "$DAEMON" "$NAME" && exit 0 || exit $?
    exit 0
    ;;

  *)
    echo "Usage: $0 {start|stop|restart|status}" >&2
    exit 0
    ;;
esac
