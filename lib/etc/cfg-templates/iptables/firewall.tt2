#!/bin/bash

# Default Variables
admin_source_linz=81.223.70.160/28

modprobe ip_tables				# core iptables
modprobe ip_conntrack			# connectrion tracking
modprobe ip_conntrack_ftp		# ip conntrack
modprobe ipt_iprange			# ip range

# flush everything on startup
iptables -F
iptables -t nat -F
iptables -t mangle -F
iptables -X
iptables -t nat -X
iptables -t mangle -X

# set default policies
iptables -P INPUT DROP
iptables -P OUTPUT DROP
iptables -P FORWARD DROP

# MY_REJECT-Chain
iptables -N MY_REJECT

# MY_REJECT
iptables -A MY_REJECT -p tcp -j REJECT --reject-with tcp-reset
iptables -A MY_REJECT -p udp -j REJECT --reject-with icmp-port-unreachable
iptables -A MY_REJECT -j REJECT --reject-with icmp-proto-unreachable

# USER chain
iptables -N USER

# Rules for USER chain
# if adminrange is defined, allow only connections from u8 or the defined adminrange
[%- IF admin_range.size > 0 -%]
	[%- FOREACH entry IN admin_range %]
		iptables -A USER -i [% if_name %] -m state --state NEW -p tcp -m iprange --src-range [% entry.start %]-[% entry.end %] --dport 2200 -j ACCEPT

		[% IF additional_ssh_port != 0 %]
			iptables -A USER -i [% if_name %] -m state --state NEW -p tcp -m iprange --src-range [% entry.start %]-[% entry.end %] --dport [% additional_ssh_port %] -j ACCEPT
		[% END %]

		### use_gui was to prevent unlicensed users from using the gui - obsolete
		[% # IF use_gui %]
		iptables -A USER -i [% if_name %] -m state --state NEW -p tcp -m iprange --src-range [% entry.start %]-[% entry.end %] --dport 980 -j ACCEPT
		[% # END %]
	[% END -%]

	iptables -A USER -i [% if_name %] -m state --state NEW -p tcp --source $admin_source_linz --dport 2200 -j ACCEPT

	[% IF additional_ssh_port != 0 %]
	iptables -A USER -i [% if_name %] -m state --state NEW -p tcp --source $admin_source_linz --dport [% additional_ssh_port %] -j ACCEPT
	[% END %]

	[% # IF use_gui %]
	iptables -A USER -i [% if_name %] -m state --state NEW -p tcp --source $admin_source_linz --dport 980 -j ACCEPT
	[% # END %]
[% ELSE %]
	iptables -A USER -i [% if_name %] -p tcp --dport 2200 -j ACCEPT # ssh

	### use_gui was to prevent unlicensed users from using the gui - obsolete
	[% # IF use_gui %]
	iptables -A USER -i [% if_name %] -p tcp --dport 980 -j ACCEPT
	[% # END %]
	[% IF additional_ssh_port != 0 %]
		iptables -A USER -i [% if_name %] -p tcp --dport [% additional_ssh_port %] -j ACCEPT # ssh
	[% END %]
[% END %]

iptables -A USER -i [% if_name %] -j DROP

# MY_DROP-Chain
iptables -N MY_DROP
#    iptables -A MY_DROP -m limit --limit 7200/h -j LOG --log-prefix "PORTSCAN DROP "
iptables -A MY_DROP -j DROP

# log all blocked packages
#    iptables -A INPUT -m state --state INVALID -m limit --limit 7200/h -j LOG --log-prefix "INPUT INVALID "
#    iptables -A OUTPUT -m state --state INVALID -m limit --limit 7200/h -j LOG --log-prefix "OUTPUT INVALID "

# block corrupt packages
iptables -A INPUT -m state --state INVALID -j DROP
iptables -A OUTPUT -m state --state INVALID -j DROP

[% IF use_snmp != 0 %]
	iptables -A INPUT -i [% if_name %] -p udp --dport [% 161 %] -j ACCEPT # snmp
[% END %]

# drop Stealth Scans etc.
iptables -A INPUT -p tcp --tcp-flags ALL NONE -j MY_DROP

# SYN FIN
iptables -A INPUT -p tcp --tcp-flags SYN,FIN SYN,FIN -j MY_DROP

# SYN RST
iptables -A INPUT -p tcp --tcp-flags SYN,RST SYN,RST -j MY_DROP

# FIN RST
iptables -A INPUT -p tcp --tcp-flags FIN,RST FIN,RST -j MY_DROP

# FIN ACK
iptables -A INPUT -p tcp --tcp-flags ACK,FIN FIN -j MY_DROP

# PSH ACK
iptables -A INPUT -p tcp --tcp-flags ACK,PSH PSH -j MY_DROP

# URG without ACK
iptables -A INPUT -p tcp --tcp-flags ACK,URG URG -j MY_DROP

# allow loopback-communication
iptables -A INPUT -i lo -j ACCEPT
iptables -A OUTPUT -o lo -j ACCEPT

# activate connection-tracking
iptables -A OUTPUT -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT
iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT


#ICMP
iptables -A INPUT -p icmp -j ACCEPT


[% IF use_25 %]
	# SMTP
	iptables -A INPUT -i [% if_name %] -m state --state NEW -p tcp --dport 25 -j ACCEPT

	# SMTPS
	iptables -A INPUT -i [% if_name %] -m state --state NEW -p tcp --dport 465 -j ACCEPT
[% END %]

# previously defined USER table which contains ssh and adminrange
iptables -A INPUT -i [% if_name %] -p tcp -j USER

# Default-Policies
iptables -A INPUT -j MY_REJECT
iptables -A OUTPUT -j MY_REJECT

exit 0
